{"remainingRequest":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tajirhas9/varsity/software_engineering/ctas/client/src/pwa/components/ServiceWorkerUpdatePopup.vue?vue&type=style&index=0&id=223c5bab&lang=scss&scoped=true&","dependencies":[{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/src/pwa/components/ServiceWorkerUpdatePopup.vue","mtime":1640465303000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc3ctdXBkYXRlLXBvcHVwID4gYnV0dG9uIHsKICBtYXJnaW4tdG9wOiAwLjVlbTsKICBwYWRkaW5nOiAwLjI1ZW0gMS41ZW07Cn0K"},{"version":3,"sources":["ServiceWorkerUpdatePopup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;AACA","file":"ServiceWorkerUpdatePopup.vue","sourceRoot":"src/pwa/components","sourcesContent":["<script lang=\"ts\">\nimport { Component, Vue } from 'vue-property-decorator'\n\n@Component({\n  name: 'ServiceWorkerUpdatePopup'\n})\nexport default class extends Vue {\n  private refreshing = false\n  private notificationText = 'New content is available!'\n  private refreshButtonText = 'Refresh'\n  private registration: ServiceWorkerRegistration | null = null\n\n  created() {\n    // Listen for swUpdated event and display refresh notification as required.\n    document.addEventListener('swUpdated', this.showRefreshUI, { once: true })\n    // Refresh all open app tabs when a new service worker is installed.\n    navigator.serviceWorker.addEventListener('controllerchange', () => {\n      if (this.refreshing) return\n      this.refreshing = true\n      window.location.reload()\n    })\n  }\n\n  render() {\n    // Avoid warning for missing template\n  }\n\n  private showRefreshUI(e: Event) {\n    // Display a notification inviting the user to refresh/reload the app due\n    // to an app update being available.\n    // The new service worker is installed, but not yet active.\n    // Store the ServiceWorkerRegistration instance for later use.\n    const h = this.$createElement\n    this.registration = (e as CustomEvent).detail\n    this.$notify.info({\n      title: 'Update available',\n      message: h('div', { class: 'sw-update-popup' }, [\n        this.notificationText,\n        h('br'),\n        h('button', {\n          on: {\n            click: (e: Event) => {\n              e.preventDefault()\n              this.refreshApp()\n            }\n          }\n        }, this.refreshButtonText)\n      ]),\n      position: 'bottom-right',\n      duration: 0\n    })\n  }\n\n  private refreshApp() {\n    // Protect against missing registration.waiting.\n    if (!this.registration || !this.registration.waiting) return\n    this.registration.waiting.postMessage('skipWaiting')\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.sw-update-popup > button {\n  margin-top: 0.5em;\n  padding: 0.25em 1.5em;\n}\n</style>\n"]}]}