{"remainingRequest":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tajirhas9/varsity/software_engineering/ctas/client/src/views/bus/components/table.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/src/views/bus/components/table.vue","mtime":1640465303000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLyoqCiAqIEBEZXZFeF9jb21wb25lbnQKICovCmltcG9ydCB7IENvbXBvbmVudCwgUHJvcCwgV2F0Y2ggfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJwppbXBvcnQgeyBtaXhpbnMgfSBmcm9tICd2dWUtY2xhc3MtY29tcG9uZW50JwppbXBvcnQgVnVlRGV2ZXggZnJvbSAnQC9sYXlvdXQvbWl4aW4vdnVlLWRldmV4JwppbXBvcnQgeyBEcml2ZXJNb2R1bGUgfSBmcm9tICdAL3N0b3JlL21vZHVsZXMvZHJpdmVyJwppbXBvcnQgeyBCdXNNb2R1bGUgfSBmcm9tICdAL3N0b3JlL21vZHVsZXMvYnVzJwoKaW50ZXJmYWNlIElSb3dEYXRhIHsKICBkcml2ZXJJZDogbnVtYmVyCiAgbmFtZTogc3RyaW5nCiAgYWRkcmVzczogc3RyaW5nCiAgbGljZW5zZVN0YXR1czogYm9vbGVhbgp9CkBDb21wb25lbnQoewogIG5hbWU6ICdCdXNUYWJsZScsCiAgY29tcG9uZW50czogewogIH0KfSkKZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBtaXhpbnMoVnVlRGV2ZXgpIHsKICBjb25zdHJ1Y3RvcigpIHsKICAgIHN1cGVyKCkKICAgIHN1cGVyLmRhdGFHcmlkUmVmS2V5ID0gdGhpcy5ncmlkUmVmS2V5CiAgICBzdXBlci50YWJsZU5hbWUgPSAnQnVzZXMnCiAgfQoKICBAUHJvcCgpIGJ1c0lkUHJvcCE6IGFueQoKICBwcml2YXRlIGdyaWRSZWZLZXkgPSAnYnVzR3JpZCc7CiAgcHJpdmF0ZSBidXNTdGF0dXNPcHRpb25zID0gWwogICAgeyB2YWx1ZTogdHJ1ZSwgbmFtZTogJ0FjdGl2ZScgfSwKICAgIHsgdmFsdWU6IGZhbHNlLCBuYW1lOiAnSW5hY3RpdmUnIH0KICBdCgogIGdldCBidXNlcygpIHsKICAgIHJldHVybiBCdXNNb2R1bGUuYnVzZXMKICB9CgogIHByaXZhdGUgYXN5bmMgZ2V0TGlzdCgpIHsKICAgIHRoaXMubGlzdExvYWRpbmcgPSB0cnVlCiAgICBhd2FpdCBCdXNNb2R1bGUuZ2V0QnVzZXMoKQogICAgdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlCiAgfQoKICBwcml2YXRlIG9uQ2VsbENsaWNrKGU6IGFueSkgewogICAgdGhyb3cgbmV3IEVycm9yKCdNZXRob2Qgbm90IGltcGxlbWVudGVkLicpCiAgfQoKICAvLyBUaGVzZSBtZXRob2Qgd2lsbCBnZXQgbWVyZ2VkIHdpdGggdGhlIFZ1ZURldmV4IG1peGluJ3MgbWV0aG9kCiAgb25Jbml0TmV3Um93KGU6IGFueSkgewogICAgdGhyb3cgbmV3IEVycm9yKCdNZXRob2Qgbm90IGltcGxlbWVudGVkLicpCiAgfQoKICBwcml2YXRlIGFzeW5jIG9uU2F2aW5nKGU6IGFueSkgewogICAgdGhpcy5saXN0TG9hZGluZyA9IHRydWUKICAgIHRyeSB7CiAgICAgIGNvbnN0IGNoYW5nZXMgPSBlLmNoYW5nZXNbMF0KICAgICAgY29uc29sZS5kZWJ1ZyhjaGFuZ2VzKQogICAgICBpZiAoY2hhbmdlcy50eXBlID09PSAnaW5zZXJ0JykgewogICAgICAgIGF3YWl0IEJ1c01vZHVsZS5hZGROZXdCdXMoY2hhbmdlcy5kYXRhKQogICAgICB9IGVsc2UgaWYgKGNoYW5nZXMudHlwZSA9PT0gJ3VwZGF0ZScpIHsKICAgICAgICBjb25zb2xlLmxvZyhjaGFuZ2VzKQogICAgICAgIGF3YWl0IEJ1c01vZHVsZS51cGRhdGVCdXMoeyBpZDogY2hhbmdlcy5rZXksIGRhdGE6IGNoYW5nZXMuZGF0YSB9KQogICAgICB9CiAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgdGl0bGU6ICdTdWNjZXNzJywKICAgICAgICBtZXNzYWdlOiAnRGF0YSB1cGRhdGVkIHN1Y2Nlc3NmdWxseScsCiAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgIH0pCiAgICAgIGlmIChlLmNoYW5nZXNbMF0udHlwZSA9PT0gJ2luc2VydCcpIHsKICAgICAgICBhd2FpdCB0aGlzLmdldExpc3QoKQogICAgICB9CiAgICB9IGNhdGNoIChlKSB7CiAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgdGl0bGU6ICdGYWlsZWQnLAogICAgICAgIG1lc3NhZ2U6ICdEYXRhIHVwZGF0ZWQgZmFpbGVkJywKICAgICAgICB0eXBlOiAnZXJyb3InLAogICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgIH0pCiAgICB9CiAgICBlLmNhbmNlbCA9IHRydWUKICAgIHRoaXMubGlzdExvYWRpbmcgPSBmYWxzZQogIH0KCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0TGlzdCgpIC8vIHRhYmxlIGRhdGEKICB9CgogIEBXYXRjaCgnYnVzSWRQcm9wJykKICBPbkJ1c0lkUHJvcENoYW5nZSh2YWw6IHN0cmluZywgb2xkVmFsOiBzdHJpbmcpIHsKICAgIGNvbnNvbGUubG9nKAogICAgICBgYnVzSWRQcm9wIHByb3BzIGNoYW5nZWQgZnJvbSAke29sZFZhbH0gdG8gJHt2YWx9YAogICAgKQogICAgdGhpcy5kYXRhR3JpZC5maWx0ZXIoWydpZCcsICc9JywgcGFyc2VJbnQodGhpcy5idXNJZFByb3ApXSkKICB9CgogIEBXYXRjaCgnZHJpdmVycycpCiAgT25Ecml2ZXJzQ2hhbmdlKCkgewogICAgdGhpcy5nZXRMaXN0KCkKICB9CgogIEBXYXRjaCgnY2xlYXJGaWx0ZXJUcmlnZ2VyZWQnKQogIE9uQ2xlYXJGaWx0ZXJUcmlnZ2VyZWQodmFsOiBib29sZWFuKSB7CiAgICBpZiAodmFsKSB7CiAgICAgIHRoaXMuYnVzSWRQcm9wID0gdW5kZWZpbmVkCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"table.vue","sourceRoot":"src/views/bus/components","sourcesContent":["<!--\n  DevEx Component\n-->\n\n<template>\n  <div class=\"table-holder\">\n    <DxLoadPanel :position=\"loadPanelPosition\" :visible=\"listLoading\" />\n    <dx-data-grid\n      id=\"gridContainer\"\n      class=\"grid\"\n      key-expr=\"id\"\n      :ref=\"dataGridRefKey\"\n      :data-source=\"buses\"\n      :show-borders=\"true\"\n      :show-column-lines=\"true\"\n      :row-alternation-enabled=\"true\"\n      :column-auto-width=\"true\"\n      :cell-hint-enabled=\"true\"\n      :allow-column-resizing=\"true\"\n      :allow-column-reordering=\"true\"\n      @saving=\"onSaving\"\n      @exporting=\"exportGrid\"\n      @toolbar-preparing=\"onToolbarPreparing\"\n      @editor-prepared=\"onEditorPrepared\"\n      @edit-canceling=\"onEditCanceling\"\n      @init-new-row=\"onInitNewRow\"\n      @cell-click=\"onCellClick\"\n    >\n      <DxFilterRow :visible=\"true\" />\n      <DxSearchPanel :visible=\"true\" />\n      <DxGroupPanel :visible=\"false\" />\n      <DxExport :enabled=\"true\" />\n      <DxColumnChooser :enabled=\"true\" />\n\n      <DxEditing\n        mode=\"popup\"\n        :allow-adding=\"getEditAccess\"\n        :allow-deleting=\"false\"\n        :allow-updating=\"getEditAccess\"\n      >\n        <DxPopup\n          :show-title=\"true\"\n          :width=\"700\"\n          :height=\"525\"\n          :title=\"popUpTitle\"\n        />\n        <DxForm>\n          <DxItem :col-count=\"2\" :col-span=\"2\" item-type=\"group\">\n            <DxItem data-field=\"name\" />\n            <DxItem data-field=\"status\" />\n          </DxItem>\n        </DxForm>\n      </DxEditing>\n      <dx-column\n        data-field=\"name\"\n        data-type=\"string\"\n        header-cell-template=\"title-header\"\n        :caption=\"$t('driver.name')\"\n        :width=\"500\"\n      >\n        <DxRequiredRule />\n      </dx-column>\n      <dx-column\n        data-field=\"status\"\n        data-type=\"boolean\"\n        header-cell-template=\"title-header\"\n        :caption=\"$t('bus.status')\"\n        cell-template=\"busStatusTemplate\"\n      >\n        <dx-lookup\n          :data-source=\"busStatusOptions\"\n          value-expr=\"value\"\n          display-expr=\"name\"\n        />\n        <DxRequiredRule />\n      </dx-column>\n      <dx-column type=\"buttons\">\n        <DxButton name=\"edit\" />\n      </dx-column>\n      <dx-group-panel :visible=\"true\" />\n      <dx-grouping :auto-expand-all=\"false\" />\n      <dx-pager\n        :visible=\"true\"\n        :allowed-page-sizes=\"pageSizes\"\n        :show-page-size-selector=\"true\"\n      />\n      <dx-paging :page-size=\"50\" />\n\n      <template #title-header=\"{data}\">\n        <div class=\"table-header\">\n          <p class=\"table-header-text\">{{ data.column.caption }}</p>\n        </div>\n      </template>\n      <template #cellTemplate=\"{data}\">\n        <div :title=\"data.text\" style=\"cursor: pointer;color: blue;\">\n          <a>{{ data.text }}</a>\n        </div>\n      </template>\n      <template #busStatusTemplate=\"{data}\">\n        <el-tag :type=\"data.text | busStatusFilter\">\n          {{ data.text }}\n        </el-tag>\n      </template>\n    </dx-data-grid>\n  </div>\n</template>\n\n<script lang=\"ts\">\n/**\n * @DevEx_component\n */\nimport { Component, Prop, Watch } from 'vue-property-decorator'\nimport { mixins } from 'vue-class-component'\nimport VueDevex from '@/layout/mixin/vue-devex'\nimport { DriverModule } from '@/store/modules/driver'\nimport { BusModule } from '@/store/modules/bus'\n\ninterface IRowData {\n  driverId: number\n  name: string\n  address: string\n  licenseStatus: boolean\n}\n@Component({\n  name: 'BusTable',\n  components: {\n  }\n})\nexport default class extends mixins(VueDevex) {\n  constructor() {\n    super()\n    super.dataGridRefKey = this.gridRefKey\n    super.tableName = 'Buses'\n  }\n\n  @Prop() busIdProp!: any\n\n  private gridRefKey = 'busGrid';\n  private busStatusOptions = [\n    { value: true, name: 'Active' },\n    { value: false, name: 'Inactive' }\n  ]\n\n  get buses() {\n    return BusModule.buses\n  }\n\n  private async getList() {\n    this.listLoading = true\n    await BusModule.getBuses()\n    this.listLoading = false\n  }\n\n  private onCellClick(e: any) {\n    throw new Error('Method not implemented.')\n  }\n\n  // These method will get merged with the VueDevex mixin's method\n  onInitNewRow(e: any) {\n    throw new Error('Method not implemented.')\n  }\n\n  private async onSaving(e: any) {\n    this.listLoading = true\n    try {\n      const changes = e.changes[0]\n      console.debug(changes)\n      if (changes.type === 'insert') {\n        await BusModule.addNewBus(changes.data)\n      } else if (changes.type === 'update') {\n        console.log(changes)\n        await BusModule.updateBus({ id: changes.key, data: changes.data })\n      }\n      this.$notify({\n        title: 'Success',\n        message: 'Data updated successfully',\n        type: 'success',\n        duration: 2000\n      })\n      if (e.changes[0].type === 'insert') {\n        await this.getList()\n      }\n    } catch (e) {\n      this.$notify({\n        title: 'Failed',\n        message: 'Data updated failed',\n        type: 'error',\n        duration: 2000\n      })\n    }\n    e.cancel = true\n    this.listLoading = false\n  }\n\n  created() {\n    this.getList() // table data\n  }\n\n  @Watch('busIdProp')\n  OnBusIdPropChange(val: string, oldVal: string) {\n    console.log(\n      `busIdProp props changed from ${oldVal} to ${val}`\n    )\n    this.dataGrid.filter(['id', '=', parseInt(this.busIdProp)])\n  }\n\n  @Watch('drivers')\n  OnDriversChange() {\n    this.getList()\n  }\n\n  @Watch('clearFilterTriggered')\n  OnClearFilterTriggered(val: boolean) {\n    if (val) {\n      this.busIdProp = undefined\n    }\n  }\n}\n</script>\n\n<style>\n.grid {\n  width: 93%;\n  align-self: center;\n  margin-left: 3.5%;\n}\n.dx-searchbox .dx-icon-search {\n  left: 0px;\n}\n.dx-texteditor-input {\n  margin-left: 15px;\n}\n.dx-placeholder:before {\n  margin-left: 15px;\n}\n.dx-searchbox .dx-texteditor-input,\n.dx-searchbox .dx-placeholder:before {\n  padding-left: 8px;\n  padding-right: 68px;\n}\n.table-header {\n  font-size: 15px;\n  color: black;\n}\n</style>\n"]}]}