{"remainingRequest":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tajirhas9/varsity/software_engineering/ctas/client/src/views/bus/components/table.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/src/views/bus/components/table.vue","mtime":1640465303000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZ3JpZCB7CiAgd2lkdGg6IDkzJTsKICBhbGlnbi1zZWxmOiBjZW50ZXI7CiAgbWFyZ2luLWxlZnQ6IDMuNSU7Cn0KLmR4LXNlYXJjaGJveCAuZHgtaWNvbi1zZWFyY2ggewogIGxlZnQ6IDBweDsKfQouZHgtdGV4dGVkaXRvci1pbnB1dCB7CiAgbWFyZ2luLWxlZnQ6IDE1cHg7Cn0KLmR4LXBsYWNlaG9sZGVyOmJlZm9yZSB7CiAgbWFyZ2luLWxlZnQ6IDE1cHg7Cn0KLmR4LXNlYXJjaGJveCAuZHgtdGV4dGVkaXRvci1pbnB1dCwKLmR4LXNlYXJjaGJveCAuZHgtcGxhY2Vob2xkZXI6YmVmb3JlIHsKICBwYWRkaW5nLWxlZnQ6IDhweDsKICBwYWRkaW5nLXJpZ2h0OiA2OHB4Owp9Ci50YWJsZS1oZWFkZXIgewogIGZvbnQtc2l6ZTogMTVweDsKICBjb2xvcjogYmxhY2s7Cn0K"},{"version":3,"sources":["table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"table.vue","sourceRoot":"src/views/bus/components","sourcesContent":["<!--\n  DevEx Component\n-->\n\n<template>\n  <div class=\"table-holder\">\n    <DxLoadPanel :position=\"loadPanelPosition\" :visible=\"listLoading\" />\n    <dx-data-grid\n      id=\"gridContainer\"\n      class=\"grid\"\n      key-expr=\"id\"\n      :ref=\"dataGridRefKey\"\n      :data-source=\"buses\"\n      :show-borders=\"true\"\n      :show-column-lines=\"true\"\n      :row-alternation-enabled=\"true\"\n      :column-auto-width=\"true\"\n      :cell-hint-enabled=\"true\"\n      :allow-column-resizing=\"true\"\n      :allow-column-reordering=\"true\"\n      @saving=\"onSaving\"\n      @exporting=\"exportGrid\"\n      @toolbar-preparing=\"onToolbarPreparing\"\n      @editor-prepared=\"onEditorPrepared\"\n      @edit-canceling=\"onEditCanceling\"\n      @init-new-row=\"onInitNewRow\"\n      @cell-click=\"onCellClick\"\n    >\n      <DxFilterRow :visible=\"true\" />\n      <DxSearchPanel :visible=\"true\" />\n      <DxGroupPanel :visible=\"false\" />\n      <DxExport :enabled=\"true\" />\n      <DxColumnChooser :enabled=\"true\" />\n\n      <DxEditing\n        mode=\"popup\"\n        :allow-adding=\"getEditAccess\"\n        :allow-deleting=\"false\"\n        :allow-updating=\"getEditAccess\"\n      >\n        <DxPopup\n          :show-title=\"true\"\n          :width=\"700\"\n          :height=\"525\"\n          :title=\"popUpTitle\"\n        />\n        <DxForm>\n          <DxItem :col-count=\"2\" :col-span=\"2\" item-type=\"group\">\n            <DxItem data-field=\"name\" />\n            <DxItem data-field=\"status\" />\n          </DxItem>\n        </DxForm>\n      </DxEditing>\n      <dx-column\n        data-field=\"name\"\n        data-type=\"string\"\n        header-cell-template=\"title-header\"\n        :caption=\"$t('driver.name')\"\n        :width=\"500\"\n      >\n        <DxRequiredRule />\n      </dx-column>\n      <dx-column\n        data-field=\"status\"\n        data-type=\"boolean\"\n        header-cell-template=\"title-header\"\n        :caption=\"$t('bus.status')\"\n        cell-template=\"busStatusTemplate\"\n      >\n        <dx-lookup\n          :data-source=\"busStatusOptions\"\n          value-expr=\"value\"\n          display-expr=\"name\"\n        />\n        <DxRequiredRule />\n      </dx-column>\n      <dx-column type=\"buttons\">\n        <DxButton name=\"edit\" />\n      </dx-column>\n      <dx-group-panel :visible=\"true\" />\n      <dx-grouping :auto-expand-all=\"false\" />\n      <dx-pager\n        :visible=\"true\"\n        :allowed-page-sizes=\"pageSizes\"\n        :show-page-size-selector=\"true\"\n      />\n      <dx-paging :page-size=\"50\" />\n\n      <template #title-header=\"{data}\">\n        <div class=\"table-header\">\n          <p class=\"table-header-text\">{{ data.column.caption }}</p>\n        </div>\n      </template>\n      <template #cellTemplate=\"{data}\">\n        <div :title=\"data.text\" style=\"cursor: pointer;color: blue;\">\n          <a>{{ data.text }}</a>\n        </div>\n      </template>\n      <template #busStatusTemplate=\"{data}\">\n        <el-tag :type=\"data.text | busStatusFilter\">\n          {{ data.text }}\n        </el-tag>\n      </template>\n    </dx-data-grid>\n  </div>\n</template>\n\n<script lang=\"ts\">\n/**\n * @DevEx_component\n */\nimport { Component, Prop, Watch } from 'vue-property-decorator'\nimport { mixins } from 'vue-class-component'\nimport VueDevex from '@/layout/mixin/vue-devex'\nimport { DriverModule } from '@/store/modules/driver'\nimport { BusModule } from '@/store/modules/bus'\n\ninterface IRowData {\n  driverId: number\n  name: string\n  address: string\n  licenseStatus: boolean\n}\n@Component({\n  name: 'BusTable',\n  components: {\n  }\n})\nexport default class extends mixins(VueDevex) {\n  constructor() {\n    super()\n    super.dataGridRefKey = this.gridRefKey\n    super.tableName = 'Buses'\n  }\n\n  @Prop() busIdProp!: any\n\n  private gridRefKey = 'busGrid';\n  private busStatusOptions = [\n    { value: true, name: 'Active' },\n    { value: false, name: 'Inactive' }\n  ]\n\n  get buses() {\n    return BusModule.buses\n  }\n\n  private async getList() {\n    this.listLoading = true\n    await BusModule.getBuses()\n    this.listLoading = false\n  }\n\n  private onCellClick(e: any) {\n    throw new Error('Method not implemented.')\n  }\n\n  // These method will get merged with the VueDevex mixin's method\n  onInitNewRow(e: any) {\n    throw new Error('Method not implemented.')\n  }\n\n  private async onSaving(e: any) {\n    this.listLoading = true\n    try {\n      const changes = e.changes[0]\n      console.debug(changes)\n      if (changes.type === 'insert') {\n        await BusModule.addNewBus(changes.data)\n      } else if (changes.type === 'update') {\n        console.log(changes)\n        await BusModule.updateBus({ id: changes.key, data: changes.data })\n      }\n      this.$notify({\n        title: 'Success',\n        message: 'Data updated successfully',\n        type: 'success',\n        duration: 2000\n      })\n      if (e.changes[0].type === 'insert') {\n        await this.getList()\n      }\n    } catch (e) {\n      this.$notify({\n        title: 'Failed',\n        message: 'Data updated failed',\n        type: 'error',\n        duration: 2000\n      })\n    }\n    e.cancel = true\n    this.listLoading = false\n  }\n\n  created() {\n    this.getList() // table data\n  }\n\n  @Watch('busIdProp')\n  OnBusIdPropChange(val: string, oldVal: string) {\n    console.log(\n      `busIdProp props changed from ${oldVal} to ${val}`\n    )\n    this.dataGrid.filter(['id', '=', parseInt(this.busIdProp)])\n  }\n\n  @Watch('drivers')\n  OnDriversChange() {\n    this.getList()\n  }\n\n  @Watch('clearFilterTriggered')\n  OnClearFilterTriggered(val: boolean) {\n    if (val) {\n      this.busIdProp = undefined\n    }\n  }\n}\n</script>\n\n<style>\n.grid {\n  width: 93%;\n  align-self: center;\n  margin-left: 3.5%;\n}\n.dx-searchbox .dx-icon-search {\n  left: 0px;\n}\n.dx-texteditor-input {\n  margin-left: 15px;\n}\n.dx-placeholder:before {\n  margin-left: 15px;\n}\n.dx-searchbox .dx-texteditor-input,\n.dx-searchbox .dx-placeholder:before {\n  padding-left: 8px;\n  padding-right: 68px;\n}\n.table-header {\n  font-size: 15px;\n  color: black;\n}\n</style>\n"]}]}