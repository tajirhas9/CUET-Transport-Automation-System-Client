{"remainingRequest":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tajirhas9/varsity/software_engineering/ctas/client/src/layout/components/TagsView/ScrollPane.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/src/layout/components/TagsView/ScrollPane.vue","mtime":1640465303000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zY3JvbGwtY29udGFpbmVyIHsKICAuZWwtc2Nyb2xsYmFyX19iYXIgewogICAgYm90dG9tOiAwcHg7CiAgfQoKICAuZWwtc2Nyb2xsYmFyX193cmFwIHsKICAgIGhlaWdodDogNDlweDsKICB9Cn0K"},{"version":3,"sources":["ScrollPane.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ScrollPane.vue","sourceRoot":"src/layout/components/TagsView","sourcesContent":["<template>\n  <el-scrollbar\n    ref=\"scrollContainer\"\n    :vertical=\"false\"\n    class=\"scroll-container\"\n    @wheel.native.prevent=\"handleScroll\"\n  >\n    <slot />\n  </el-scrollbar>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from 'vue-property-decorator'\n\nconst tagSpacing = 4\n\n@Component({\n  name: 'ScrollPane'\n})\nexport default class extends Vue {\n  get scrollWrapper() {\n    return (this.$refs.scrollContainer as Vue).$refs.wrap as HTMLElement\n  }\n\n  mounted() {\n    this.scrollWrapper.addEventListener('scroll', this.emitScroll, true)\n  }\n\n  beforeDestroy() {\n    this.scrollWrapper.removeEventListener('scroll', this.emitScroll)\n  }\n\n  private handleScroll(e: WheelEvent) {\n    const eventDelta = (e as any).wheelDelta || -e.deltaY * 40\n    const scrollWrapper = this.scrollWrapper\n    scrollWrapper.scrollLeft = scrollWrapper.scrollLeft + eventDelta / 4\n  }\n\n  private emitScroll() {\n    this.$emit('scroll')\n  }\n\n  public moveToTarget(currentTag: HTMLElement) {\n    const container = (this.$refs.scrollContainer as Vue).$el as HTMLElement\n    const containerWidth = container.offsetWidth\n    const scrollWrapper = this.scrollWrapper\n    const tagList = this.$parent.$refs.tag as any[]\n\n    let firstTag = null\n    let lastTag = null\n\n    // find first tag and last tag\n    if (tagList.length > 0) {\n      firstTag = tagList[0]\n      lastTag = tagList[tagList.length - 1]\n    }\n\n    if (firstTag === currentTag) {\n      scrollWrapper.scrollLeft = 0\n    } else if (lastTag === currentTag) {\n      scrollWrapper.scrollLeft = scrollWrapper.scrollWidth - containerWidth\n    } else {\n      // find preTag and nextTag\n      const currentIndex = tagList.findIndex(item => item === currentTag)\n      const prevTag = tagList[currentIndex - 1]\n      const nextTag = tagList[currentIndex + 1]\n      // the tag's offsetLeft after of nextTag\n      const afterNextTagOffsetLeft = nextTag.$el.offsetLeft + nextTag.$el.offsetWidth + tagSpacing\n      // the tag's offsetLeft before of prevTag\n      const beforePrevTagOffsetLeft = prevTag.$el.offsetLeft - tagSpacing\n\n      if (afterNextTagOffsetLeft > scrollWrapper.scrollLeft + containerWidth) {\n        scrollWrapper.scrollLeft = afterNextTagOffsetLeft - containerWidth\n      } else if (beforePrevTagOffsetLeft < scrollWrapper.scrollLeft) {\n        scrollWrapper.scrollLeft = beforePrevTagOffsetLeft\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.scroll-container {\n  .el-scrollbar__bar {\n    bottom: 0px;\n  }\n\n  .el-scrollbar__wrap {\n    height: 49px;\n  }\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.scroll-container {\n  white-space: nowrap;\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n}\n</style>\n"]}]}