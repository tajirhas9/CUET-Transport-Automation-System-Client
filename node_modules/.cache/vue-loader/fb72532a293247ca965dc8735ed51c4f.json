{"remainingRequest":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tajirhas9/varsity/software_engineering/ctas/client/src/layout/components/TagsView/index.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/src/layout/components/TagsView/index.vue","mtime":1640465303000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgovLyBSZXNldCBlbGVtZW50IGNzcyBvZiBlbC1pY29uLWNsb3NlCi50YWdzLXZpZXctd3JhcHBlciB7CiAgLnRhZ3Mtdmlldy1pdGVtIHsKICAgIC5lbC1pY29uLWNsb3NlIHsKICAgICAgd2lkdGg6IDE2cHg7CiAgICAgIGhlaWdodDogMTZweDsKICAgICAgdmVydGljYWwtYWxpZ246IDJweDsKICAgICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGN1YmljLWJlemllcigwLjY0NSwgMC4wNDUsIDAuMzU1LCAxKTsKICAgICAgdHJhbnNmb3JtLW9yaWdpbjogMTAwJSA1MCU7CgogICAgICAmOmJlZm9yZSB7CiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjYpOwogICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogLTNweDsKICAgICAgfQoKICAgICAgJjpob3ZlciB7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2I0YmNjYzsKICAgICAgICBjb2xvcjogI2ZmZjsKICAgICAgfQogICAgfQogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/layout/components/TagsView","sourcesContent":["<template>\n  <div\n    id=\"tags-view-container\"\n    class=\"tags-view-container\"\n  >\n    <scroll-pane\n      ref=\"scrollPane\"\n      class=\"tags-view-wrapper\"\n      @scroll=\"handleScroll\"\n    >\n      <router-link\n        v-for=\"tag in visitedViews\"\n        ref=\"tag\"\n        :key=\"tag.path\"\n        :class=\"isActive(tag) ? 'active' : ''\"\n        :to=\"{path: tag.path, query: tag.query, fullPath: tag.fullPath}\"\n        class=\"tags-view-item\"\n        @click.middle.native=\"!isAffix(tag)?closeSelectedTag(tag):''\"\n        @contextmenu.prevent.native=\"openMenu(tag, $event)\"\n      >\n        {{ $t('route.' + tag.meta.title) }}\n        <span\n          v-if=\"!isAffix(tag)\"\n          class=\"el-icon-close\"\n          @click.prevent.stop=\"closeSelectedTag(tag)\"\n        />\n      </router-link>\n    </scroll-pane>\n    <ul\n      v-show=\"visible\"\n      :style=\"{left: left+'px', top: top+'px'}\"\n      class=\"contextmenu\"\n    >\n      <li @click=\"refreshSelectedTag(selectedTag)\">\n        {{ $t('tagsView.refresh') }}\n      </li>\n      <li\n        v-if=\"!isAffix(selectedTag)\"\n        @click=\"closeSelectedTag(selectedTag)\"\n      >\n        {{\n          $t('tagsView.close') }}\n      </li>\n      <li @click=\"closeOthersTags\">\n        {{ $t('tagsView.closeOthers') }}\n      </li>\n      <li @click=\"closeAllTags(selectedTag)\">\n        {{ $t('tagsView.closeAll') }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport path from 'path'\nimport { Component, Vue, Watch } from 'vue-property-decorator'\nimport { RouteConfig } from 'vue-router'\nimport { PermissionModule } from '@/store/modules/permission'\nimport { TagsViewModule, ITagView } from '@/store/modules/tags-view'\nimport ScrollPane from './ScrollPane.vue'\n\n@Component({\n  name: 'TagsView',\n  components: {\n    ScrollPane\n  }\n})\nexport default class extends Vue {\n  private visible = false\n  private top = 0\n  private left = 0\n  private selectedTag: ITagView = {}\n  private affixTags: ITagView[] = []\n\n  get visitedViews() {\n    return TagsViewModule.visitedViews\n  }\n\n  get routes() {\n    return PermissionModule.routes\n  }\n\n  @Watch('$route')\n  private onRouteChange() {\n    this.addTags()\n    this.moveToCurrentTag()\n  }\n\n  @Watch('visible')\n  private onVisibleChange(value: boolean) {\n    if (value) {\n      document.body.addEventListener('click', this.closeMenu)\n    } else {\n      document.body.removeEventListener('click', this.closeMenu)\n    }\n  }\n\n  mounted() {\n    this.initTags()\n    this.addTags()\n  }\n\n  private isActive(route: ITagView) {\n    return route.path === this.$route.path\n  }\n\n  private isAffix(tag: ITagView) {\n    return tag.meta && tag.meta.affix\n  }\n\n  private filterAffixTags(routes: RouteConfig[], basePath = '/') {\n    let tags: ITagView[] = []\n    routes.forEach(route => {\n      if (route.meta && route.meta.affix) {\n        const tagPath = path.resolve(basePath, route.path)\n        tags.push({\n          fullPath: tagPath,\n          path: tagPath,\n          name: route.name,\n          meta: { ...route.meta }\n        })\n      }\n      if (route.children) {\n        const childTags = this.filterAffixTags(route.children, route.path)\n        if (childTags.length >= 1) {\n          tags = [...tags, ...childTags]\n        }\n      }\n    })\n    return tags\n  }\n\n  private initTags() {\n    this.affixTags = this.filterAffixTags(this.routes)\n    for (const tag of this.affixTags) {\n      // Must have tag name\n      if (tag.name) {\n        TagsViewModule.addVisitedView(tag)\n      }\n    }\n  }\n\n  private addTags() {\n    const { name } = this.$route\n    if (name) {\n      TagsViewModule.addView(this.$route)\n    }\n    return false\n  }\n\n  private moveToCurrentTag() {\n    const tags = this.$refs.tag as any[] // TODO: better typescript support for router-link\n    this.$nextTick(() => {\n      for (const tag of tags) {\n        if ((tag.to as ITagView).path === this.$route.path) {\n          (this.$refs.scrollPane as ScrollPane).moveToTarget(tag as any)\n          // When query is different then update\n          if ((tag.to as ITagView).fullPath !== this.$route.fullPath) {\n            TagsViewModule.updateVisitedView(this.$route)\n          }\n          break\n        }\n      }\n    })\n  }\n\n  private refreshSelectedTag(view: ITagView) {\n    TagsViewModule.delCachedView(view)\n    const { fullPath } = view\n    this.$nextTick(() => {\n      this.$router.replace({\n        path: '/redirect' + fullPath\n      }).catch(err => {\n        console.warn(err)\n      })\n    })\n  }\n\n  private closeSelectedTag(view: ITagView) {\n    TagsViewModule.delView(view)\n    if (this.isActive(view)) {\n      this.toLastView(TagsViewModule.visitedViews, view)\n    }\n  }\n\n  private closeOthersTags() {\n    if (this.selectedTag.fullPath !== this.$route.path && this.selectedTag.fullPath !== undefined) {\n      this.$router.push(this.selectedTag.fullPath).catch(err => {\n        console.warn(err)\n      })\n    }\n    TagsViewModule.delOthersViews(this.selectedTag)\n    this.moveToCurrentTag()\n  }\n\n  private closeAllTags(view: ITagView) {\n    TagsViewModule.delAllViews()\n    if (this.affixTags.some(tag => tag.path === this.$route.path)) {\n      return\n    }\n    this.toLastView(TagsViewModule.visitedViews, view)\n  }\n\n  private toLastView(visitedViews: ITagView[], view: ITagView) {\n    const latestView = visitedViews.slice(-1)[0]\n    if (latestView !== undefined && latestView.fullPath !== undefined) {\n      this.$router.push(latestView.fullPath).catch(err => {\n        console.warn(err)\n      })\n    } else {\n      // Default redirect to the home page if there is no tags-view, adjust it if you want\n      if (view.name === 'Dashboard') {\n        // to reload home page\n        this.$router.replace({ path: '/redirect' + view.fullPath }).catch(err => {\n          console.warn(err)\n        })\n      } else {\n        this.$router.push('/').catch(err => {\n          console.warn(err)\n        })\n      }\n    }\n  }\n\n  private openMenu(tag: ITagView, e: MouseEvent) {\n    const menuMinWidth = 105\n    const offsetLeft = this.$el.getBoundingClientRect().left // container margin left\n    const offsetWidth = (this.$el as HTMLElement).offsetWidth // container width\n    const maxLeft = offsetWidth - menuMinWidth // left boundary\n    const left = e.clientX - offsetLeft + 15 // 15: margin right\n    if (left > maxLeft) {\n      this.left = maxLeft\n    } else {\n      this.left = left\n    }\n    this.top = e.clientY\n    this.visible = true\n    this.selectedTag = tag\n  }\n\n  private closeMenu() {\n    this.visible = false\n  }\n\n  private handleScroll() {\n    this.closeMenu()\n  }\n}\n</script>\n\n<style lang=\"scss\">\n// Reset element css of el-icon-close\n.tags-view-wrapper {\n  .tags-view-item {\n    .el-icon-close {\n      width: 16px;\n      height: 16px;\n      vertical-align: 2px;\n      border-radius: 50%;\n      text-align: center;\n      transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n      transform-origin: 100% 50%;\n\n      &:before {\n        transform: scale(0.6);\n        display: inline-block;\n        vertical-align: -3px;\n      }\n\n      &:hover {\n        background-color: #b4bccc;\n        color: #fff;\n      }\n    }\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n.tags-view-container {\n  height: 34px;\n  width: 100%;\n  background: #fff;\n  border-bottom: 1px solid #d8dce5;\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.12), 0 0 3px 0 rgba(0, 0, 0, 0.04);\n\n  .tags-view-wrapper {\n    .tags-view-item {\n      display: inline-block;\n      position: relative;\n      cursor: pointer;\n      height: 26px;\n      line-height: 26px;\n      border: 1px solid #d8dce5;\n      color: #495060;\n      background: #fff;\n      padding: 0 8px;\n      font-size: 12px;\n      margin-left: 5px;\n      margin-top: 4px;\n\n      &:first-of-type {\n        margin-left: 15px;\n      }\n\n      &:last-of-type {\n        margin-right: 15px;\n      }\n\n      &.active {\n        background-color: #42b983;\n        color: #fff;\n        border-color: #42b983;\n\n        &::before {\n          content: '';\n          background: #fff;\n          display: inline-block;\n          width: 8px;\n          height: 8px;\n          border-radius: 50%;\n          position: relative;\n          margin-right: 2px;\n        }\n      }\n    }\n  }\n\n  .contextmenu {\n    margin: 0;\n    background: #fff;\n    z-index: 3000;\n    position: absolute;\n    list-style-type: none;\n    padding: 5px 0;\n    border-radius: 4px;\n    font-size: 12px;\n    font-weight: 400;\n    color: #333;\n    box-shadow: 2px 2px 3px 0 rgba(0, 0, 0, 0.3);\n\n    li {\n      margin: 0;\n      padding: 7px 16px;\n      cursor: pointer;\n\n      &:hover {\n        background: #eee;\n      }\n    }\n  }\n}\n</style>\n"]}]}