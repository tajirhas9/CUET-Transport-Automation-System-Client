{"remainingRequest":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tajirhas9/varsity/software_engineering/ctas/client/src/layout/components/Settings/index.vue?vue&type=style&index=0&id=126b135a&lang=scss&scoped=true&","dependencies":[{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/src/layout/components/Settings/index.vue","mtime":1640465303000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZHJhd2VyLWNvbnRhaW5lciB7CiAgcGFkZGluZzogMjRweDsKICBmb250LXNpemU6IDE0cHg7CiAgbGluZS1oZWlnaHQ6IDEuNTsKICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7CgogIC5kcmF3ZXItdGl0bGUgewogICAgbWFyZ2luLWJvdHRvbTogMTJweDsKICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIC44NSk7CiAgICBmb250LXNpemU6IDE0cHg7CiAgICBsaW5lLWhlaWdodDogMjJweDsKICB9CgogIC5kcmF3ZXItaXRlbSB7CiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAuNjUpOwogICAgZm9udC1zaXplOiAxNHB4OwogICAgcGFkZGluZzogMTJweCAwOwogIH0KCiAgLmRyYXdlci1zd2l0Y2ggewogICAgZmxvYXQ6IHJpZ2h0CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/layout/components/Settings","sourcesContent":["<template>\n  <div class=\"drawer-container\">\n    <div>\n      <h3 class=\"drawer-title\">\n        {{ $t('settings.title') }}\n      </h3>\n\n      <div class=\"drawer-item\">\n        <span>{{ $t('settings.theme') }}</span>\n        <theme-picker\n          style=\"float: right;height: 26px;margin: -3px 8px 0 0;\"\n          @change=\"themeChange\"\n        />\n      </div>\n\n      <div class=\"drawer-item\">\n        <span>{{ $t('settings.showTagsView') }}</span>\n        <el-switch\n          v-model=\"showTagsView\"\n          class=\"drawer-switch\"\n        />\n      </div>\n\n      <div class=\"drawer-item\">\n        <span>{{ $t('settings.showSidebarLogo') }}</span>\n        <el-switch\n          v-model=\"showSidebarLogo\"\n          class=\"drawer-switch\"\n        />\n      </div>\n\n      <div class=\"drawer-item\">\n        <span>{{ $t('settings.fixedHeader') }}</span>\n        <el-switch\n          v-model=\"fixedHeader\"\n          class=\"drawer-switch\"\n        />\n      </div>\n\n      <div class=\"drawer-item\">\n        <span>{{ $t('settings.sidebarTextTheme') }}</span>\n        <el-switch\n          v-model=\"sidebarTextTheme\"\n          class=\"drawer-switch\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from 'vue-property-decorator'\nimport { SettingsModule } from '@/store/modules/settings'\nimport ThemePicker from '@/components/ThemePicker/index.vue'\n\n@Component({\n  name: 'Settings',\n  components: {\n    ThemePicker\n  }\n})\nexport default class extends Vue {\n  get fixedHeader() {\n    return SettingsModule.fixedHeader\n  }\n\n  set fixedHeader(value) {\n    SettingsModule.ChangeSetting({ key: 'fixedHeader', value })\n  }\n\n  get showTagsView() {\n    return SettingsModule.showTagsView\n  }\n\n  set showTagsView(value) {\n    SettingsModule.ChangeSetting({ key: 'showTagsView', value })\n  }\n\n  get showSidebarLogo() {\n    return SettingsModule.showSidebarLogo\n  }\n\n  set showSidebarLogo(value) {\n    SettingsModule.ChangeSetting({ key: 'showSidebarLogo', value })\n  }\n\n  get sidebarTextTheme() {\n    return SettingsModule.sidebarTextTheme\n  }\n\n  set sidebarTextTheme(value) {\n    SettingsModule.ChangeSetting({ key: 'sidebarTextTheme', value })\n  }\n\n  private themeChange(value: string) {\n    SettingsModule.ChangeSetting({ key: 'theme', value })\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.drawer-container {\n  padding: 24px;\n  font-size: 14px;\n  line-height: 1.5;\n  word-wrap: break-word;\n\n  .drawer-title {\n    margin-bottom: 12px;\n    color: rgba(0, 0, 0, .85);\n    font-size: 14px;\n    line-height: 22px;\n  }\n\n  .drawer-item {\n    color: rgba(0, 0, 0, .65);\n    font-size: 14px;\n    padding: 12px 0;\n  }\n\n  .drawer-switch {\n    float: right\n  }\n}\n</style>\n"]}]}