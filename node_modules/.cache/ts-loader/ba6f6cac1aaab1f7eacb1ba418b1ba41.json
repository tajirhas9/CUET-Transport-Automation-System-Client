{"remainingRequest":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/babel-loader/lib/index.js!/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/ts-loader/index.js??ref--15-2!/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tajirhas9/varsity/software_engineering/ctas/client/src/views/bus/components/table.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/src/views/bus/components/table.vue","mtime":1640465303000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/babel.config.js","mtime":1640465303000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tajirhas9/varsity/software_engineering/ctas/client/src/views/bus/components/table.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;;;;;;;AA4GA;;AAEG;;AACH,SAAS,SAAT,EAAoB,IAApB,EAA0B,KAA1B,QAAuC,wBAAvC;AACA,SAAS,MAAT,QAAuB,qBAAvB;AACA,OAAO,QAAP,MAAqB,0BAArB;AAEA,SAAS,SAAT,QAA0B,qBAA1B;;AAaA,IAAA,SAAA;AAAA;;AAAA;;AACE,uBAAA;AAAA;;AAAA;;AACE;AAOM,UAAA,UAAA,GAAa,SAAb;AACA,UAAA,gBAAA,GAAmB,CACzB;AAAE,MAAA,KAAK,EAAE,IAAT;AAAe,MAAA,IAAI,EAAE;AAArB,KADyB,EAEzB;AAAE,MAAA,KAAK,EAAE,KAAT;AAAgB,MAAA,IAAI,EAAE;AAAtB,KAFyB,CAAnB;;AAPN,+GAAuB,MAAK,UAA5B;;AACA,2GAAkB,OAAlB;;AAHF;AAIC;;AALH;AAAA;AAAA,SAeE,eAAS;AACP,aAAO,SAAS,CAAC,KAAjB;AACD;AAjBH;AAAA;AAAA;AAAA,6EAmBU;AAAA;AAAA;AAAA;AAAA;AACN,qBAAK,WAAL,GAAmB,IAAnB;AADM;AAAA,uBAEA,SAAS,CAAC,QAAV,EAFA;;AAAA;AAGN,qBAAK,WAAL,GAAmB,KAAnB;;AAHM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAnBV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,WAyBU,qBAAY,CAAZ,EAAkB;AACxB,YAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACD,KA3BH,CA6BE;;AA7BF;AAAA;AAAA,WA8BE,sBAAa,CAAb,EAAmB;AACjB,YAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACD;AAhCH;AAAA;AAAA;AAAA,8EAkCU,kBAAe,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACN,qBAAK,WAAL,GAAmB,IAAnB;AADM;AAGE,gBAAA,OAHF,GAGY,CAAC,CAAC,OAAF,CAAU,CAAV,CAHZ;AAIJ,gBAAA,OAAO,CAAC,KAAR,CAAc,OAAd;;AAJI,sBAKA,OAAO,CAAC,IAAR,KAAiB,QALjB;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAMI,SAAS,CAAC,SAAV,CAAoB,OAAO,CAAC,IAA5B,CANJ;;AAAA;AAAA;AAAA;;AAAA;AAAA,sBAOO,OAAO,CAAC,IAAR,KAAiB,QAPxB;AAAA;AAAA;AAAA;;AAQF,gBAAA,OAAO,CAAC,GAAR,CAAY,OAAZ;AARE;AAAA,uBASI,SAAS,CAAC,SAAV,CAAoB;AAAE,kBAAA,EAAE,EAAE,OAAO,CAAC,GAAd;AAAmB,kBAAA,IAAI,EAAE,OAAO,CAAC;AAAjC,iBAApB,CATJ;;AAAA;AAWJ,qBAAK,OAAL,CAAa;AACX,kBAAA,KAAK,EAAE,SADI;AAEX,kBAAA,OAAO,EAAE,2BAFE;AAGX,kBAAA,IAAI,EAAE,SAHK;AAIX,kBAAA,QAAQ,EAAE;AAJC,iBAAb;;AAXI,sBAiBA,CAAC,CAAC,OAAF,CAAU,CAAV,EAAa,IAAb,KAAsB,QAjBtB;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAkBI,KAAK,OAAL,EAlBJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAqBJ,qBAAK,OAAL,CAAa;AACX,kBAAA,KAAK,EAAE,QADI;AAEX,kBAAA,OAAO,EAAE,qBAFE;AAGX,kBAAA,IAAI,EAAE,OAHK;AAIX,kBAAA,QAAQ,EAAE;AAJC,iBAAb;;AArBI;AA4BN,gBAAA,CAAC,CAAC,MAAF,GAAW,IAAX;AACA,qBAAK,WAAL,GAAmB,KAAnB;;AA7BM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAlCV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,WAkEE,mBAAO;AACL,WAAK,OAAL,GADK,CACU;AAChB;AApEH;AAAA;AAAA,WAuEE,2BAAkB,GAAlB,EAA+B,MAA/B,EAA6C;AAC3C,MAAA,OAAO,CAAC,GAAR,wCACkC,MADlC,iBAC+C,GAD/C;AAGA,WAAK,QAAL,CAAc,MAAd,CAAqB,CAAC,IAAD,EAAO,GAAP,EAAY,QAAQ,CAAC,KAAK,SAAN,CAApB,CAArB;AACD;AA5EH;AAAA;AAAA,WA+EE,2BAAe;AACb,WAAK,OAAL;AACD;AAjFH;AAAA;AAAA,WAoFE,gCAAuB,GAAvB,EAAmC;AACjC,UAAI,GAAJ,EAAS;AACP,aAAK,SAAL,GAAiB,SAAjB;AACD;AACF;AAxFH;;AAAA;AAAA,EAA6B,MAAM,CAAC,QAAD,CAAnC,CAAA;;AAOU,UAAA,CAAA,CAAP,IAAI,EAAG,CAAA,E,mBAAA,E,WAAA,E,KAAe,CAAf,CAAA;;AAgER,UAAA,CAAA,CADC,KAAK,CAAC,WAAD,CACN,CAAA,E,mBAAA,E,mBAAA,EAKC,IALD,CAAA;;AAQA,UAAA,CAAA,CADC,KAAK,CAAC,SAAD,CACN,CAAA,E,mBAAA,E,iBAAA,EAEC,IAFD,CAAA;;AAKA,UAAA,CAAA,CADC,KAAK,CAAC,sBAAD,CACN,CAAA,E,mBAAA,E,wBAAA,EAIC,IAJD,CAAA;;AApFF,SAAA,GAAA,UAAA,CAAA,CALC,SAAS,CAAC;AACT,EAAA,IAAI,EAAE,UADG;AAET,EAAA,UAAU,EAAE;AAFH,CAAD,CAKV,CAAA,EAyFC,SAzFD,CAAA","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @DevEx_component\n */\nimport { Component, Prop, Watch } from 'vue-property-decorator'\nimport { mixins } from 'vue-class-component'\nimport VueDevex from '@/layout/mixin/vue-devex'\nimport { DriverModule } from '@/store/modules/driver'\nimport { BusModule } from '@/store/modules/bus'\n\ninterface IRowData {\n  driverId: number\n  name: string\n  address: string\n  licenseStatus: boolean\n}\n@Component({\n  name: 'BusTable',\n  components: {\n  }\n})\nexport default class extends mixins(VueDevex) {\n  constructor() {\n    super()\n    super.dataGridRefKey = this.gridRefKey\n    super.tableName = 'Buses'\n  }\n\n  @Prop() busIdProp!: any\n\n  private gridRefKey = 'busGrid';\n  private busStatusOptions = [\n    { value: true, name: 'Active' },\n    { value: false, name: 'Inactive' }\n  ]\n\n  get buses() {\n    return BusModule.buses\n  }\n\n  private async getList() {\n    this.listLoading = true\n    await BusModule.getBuses()\n    this.listLoading = false\n  }\n\n  private onCellClick(e: any) {\n    throw new Error('Method not implemented.')\n  }\n\n  // These method will get merged with the VueDevex mixin's method\n  onInitNewRow(e: any) {\n    throw new Error('Method not implemented.')\n  }\n\n  private async onSaving(e: any) {\n    this.listLoading = true\n    try {\n      const changes = e.changes[0]\n      console.debug(changes)\n      if (changes.type === 'insert') {\n        await BusModule.addNewBus(changes.data)\n      } else if (changes.type === 'update') {\n        console.log(changes)\n        await BusModule.updateBus({ id: changes.key, data: changes.data })\n      }\n      this.$notify({\n        title: 'Success',\n        message: 'Data updated successfully',\n        type: 'success',\n        duration: 2000\n      })\n      if (e.changes[0].type === 'insert') {\n        await this.getList()\n      }\n    } catch (e) {\n      this.$notify({\n        title: 'Failed',\n        message: 'Data updated failed',\n        type: 'error',\n        duration: 2000\n      })\n    }\n    e.cancel = true\n    this.listLoading = false\n  }\n\n  created() {\n    this.getList() // table data\n  }\n\n  @Watch('busIdProp')\n  OnBusIdPropChange(val: string, oldVal: string) {\n    console.log(\n      `busIdProp props changed from ${oldVal} to ${val}`\n    )\n    this.dataGrid.filter(['id', '=', parseInt(this.busIdProp)])\n  }\n\n  @Watch('drivers')\n  OnDriversChange() {\n    this.getList()\n  }\n\n  @Watch('clearFilterTriggered')\n  OnClearFilterTriggered(val: boolean) {\n    if (val) {\n      this.busIdProp = undefined\n    }\n  }\n}\n"],"sourceRoot":""}]}