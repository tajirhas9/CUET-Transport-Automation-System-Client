{"remainingRequest":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/babel-loader/lib/index.js!/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/ts-loader/index.js??ref--15-2!/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tajirhas9/varsity/software_engineering/ctas/client/src/layout/components/TagsView/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/src/layout/components/TagsView/index.vue","mtime":1640465303000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/babel.config.js","mtime":1640465303000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tajirhas9/varsity/software_engineering/ctas/client/src/layout/components/TagsView/index.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport path from 'path'\nimport { Component, Vue, Watch } from 'vue-property-decorator'\nimport { RouteConfig } from 'vue-router'\nimport { PermissionModule } from '@/store/modules/permission'\nimport { TagsViewModule, ITagView } from '@/store/modules/tags-view'\nimport ScrollPane from './ScrollPane.vue'\n\n@Component({\n  name: 'TagsView',\n  components: {\n    ScrollPane\n  }\n})\nexport default class extends Vue {\n  private visible = false\n  private top = 0\n  private left = 0\n  private selectedTag: ITagView = {}\n  private affixTags: ITagView[] = []\n\n  get visitedViews() {\n    return TagsViewModule.visitedViews\n  }\n\n  get routes() {\n    return PermissionModule.routes\n  }\n\n  @Watch('$route')\n  private onRouteChange() {\n    this.addTags()\n    this.moveToCurrentTag()\n  }\n\n  @Watch('visible')\n  private onVisibleChange(value: boolean) {\n    if (value) {\n      document.body.addEventListener('click', this.closeMenu)\n    } else {\n      document.body.removeEventListener('click', this.closeMenu)\n    }\n  }\n\n  mounted() {\n    this.initTags()\n    this.addTags()\n  }\n\n  private isActive(route: ITagView) {\n    return route.path === this.$route.path\n  }\n\n  private isAffix(tag: ITagView) {\n    return tag.meta && tag.meta.affix\n  }\n\n  private filterAffixTags(routes: RouteConfig[], basePath = '/') {\n    let tags: ITagView[] = []\n    routes.forEach(route => {\n      if (route.meta && route.meta.affix) {\n        const tagPath = path.resolve(basePath, route.path)\n        tags.push({\n          fullPath: tagPath,\n          path: tagPath,\n          name: route.name,\n          meta: { ...route.meta }\n        })\n      }\n      if (route.children) {\n        const childTags = this.filterAffixTags(route.children, route.path)\n        if (childTags.length >= 1) {\n          tags = [...tags, ...childTags]\n        }\n      }\n    })\n    return tags\n  }\n\n  private initTags() {\n    this.affixTags = this.filterAffixTags(this.routes)\n    for (const tag of this.affixTags) {\n      // Must have tag name\n      if (tag.name) {\n        TagsViewModule.addVisitedView(tag)\n      }\n    }\n  }\n\n  private addTags() {\n    const { name } = this.$route\n    if (name) {\n      TagsViewModule.addView(this.$route)\n    }\n    return false\n  }\n\n  private moveToCurrentTag() {\n    const tags = this.$refs.tag as any[] // TODO: better typescript support for router-link\n    this.$nextTick(() => {\n      for (const tag of tags) {\n        if ((tag.to as ITagView).path === this.$route.path) {\n          (this.$refs.scrollPane as ScrollPane).moveToTarget(tag as any)\n          // When query is different then update\n          if ((tag.to as ITagView).fullPath !== this.$route.fullPath) {\n            TagsViewModule.updateVisitedView(this.$route)\n          }\n          break\n        }\n      }\n    })\n  }\n\n  private refreshSelectedTag(view: ITagView) {\n    TagsViewModule.delCachedView(view)\n    const { fullPath } = view\n    this.$nextTick(() => {\n      this.$router.replace({\n        path: '/redirect' + fullPath\n      }).catch(err => {\n        console.warn(err)\n      })\n    })\n  }\n\n  private closeSelectedTag(view: ITagView) {\n    TagsViewModule.delView(view)\n    if (this.isActive(view)) {\n      this.toLastView(TagsViewModule.visitedViews, view)\n    }\n  }\n\n  private closeOthersTags() {\n    if (this.selectedTag.fullPath !== this.$route.path && this.selectedTag.fullPath !== undefined) {\n      this.$router.push(this.selectedTag.fullPath).catch(err => {\n        console.warn(err)\n      })\n    }\n    TagsViewModule.delOthersViews(this.selectedTag)\n    this.moveToCurrentTag()\n  }\n\n  private closeAllTags(view: ITagView) {\n    TagsViewModule.delAllViews()\n    if (this.affixTags.some(tag => tag.path === this.$route.path)) {\n      return\n    }\n    this.toLastView(TagsViewModule.visitedViews, view)\n  }\n\n  private toLastView(visitedViews: ITagView[], view: ITagView) {\n    const latestView = visitedViews.slice(-1)[0]\n    if (latestView !== undefined && latestView.fullPath !== undefined) {\n      this.$router.push(latestView.fullPath).catch(err => {\n        console.warn(err)\n      })\n    } else {\n      // Default redirect to the home page if there is no tags-view, adjust it if you want\n      if (view.name === 'Dashboard') {\n        // to reload home page\n        this.$router.replace({ path: '/redirect' + view.fullPath }).catch(err => {\n          console.warn(err)\n        })\n      } else {\n        this.$router.push('/').catch(err => {\n          console.warn(err)\n        })\n      }\n    }\n  }\n\n  private openMenu(tag: ITagView, e: MouseEvent) {\n    const menuMinWidth = 105\n    const offsetLeft = this.$el.getBoundingClientRect().left // container margin left\n    const offsetWidth = (this.$el as HTMLElement).offsetWidth // container width\n    const maxLeft = offsetWidth - menuMinWidth // left boundary\n    const left = e.clientX - offsetLeft + 15 // 15: margin right\n    if (left > maxLeft) {\n      this.left = maxLeft\n    } else {\n      this.left = left\n    }\n    this.top = e.clientY\n    this.visible = true\n    this.selectedTag = tag\n  }\n\n  private closeMenu() {\n    this.visible = false\n  }\n\n  private handleScroll() {\n    this.closeMenu()\n  }\n}\n"],"sourceRoot":""}]}