{"remainingRequest":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/babel-loader/lib/index.js!/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/ts-loader/index.js??ref--15-2!/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tajirhas9/varsity/software_engineering/ctas/client/src/components/ThemePicker/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/src/components/ThemePicker/index.vue","mtime":1640465303000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/babel.config.js","mtime":1640465303000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/tajirhas9/varsity/software_engineering/ctas/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tajirhas9/varsity/software_engineering/ctas/client/src/components/ThemePicker/index.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAUA,SAAS,SAAT,EAAoB,GAApB,EAAyB,KAAzB,QAAsC,wBAAtC;AACA,SAAS,cAAT,QAA+B,0BAA/B,C,CAEA;;AACA,IAAM,OAAO,GAAG,OAAO,CAAC,yBAAD,CAAP,CAAmC,OAAnD,C,CAA2D;;;AAC3D,IAAM,cAAc,GAAG,SAAvB,C,CAAiC;;AAKjC,IAAA,SAAA;AAAA;;AAAA;;AAAA,uBAAA;AAAA;;AAAA;;;AACU,UAAA,KAAA,GAAQ,EAAR,CADV,CACqB;;AACX,UAAA,KAAA,GAAQ,EAAR;AAFV;AAuHC;;AAvHD;AAAA;AAAA,SAIE,eAAgB;AACd,aAAO,cAAc,CAAC,KAAtB;AACD;AANH;AAAA;AAAA,WASU,8BAAqB,KAArB,EAAkC;AACxC,WAAK,KAAL,GAAa,KAAb;AACD;AAXH;AAAA;AAAA;AAAA,mFAcU,iBAAoB,KAApB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACD,KADC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAEA,gBAAA,QAFA,GAEW,KAAK,KAAL,GAAa,KAAK,KAAlB,GAA0B,cAFrC;AAGA,gBAAA,YAHA,GAGe,KAAK,eAAL,CAAqB,KAAK,CAAC,OAAN,CAAc,GAAd,EAAmB,EAAnB,CAArB,CAHf;AAIA,gBAAA,eAJA,GAIkB,KAAK,eAAL,CAAqB,QAAQ,CAAC,OAAT,CAAiB,GAAjB,EAAsB,EAAtB,CAArB,CAJlB;AAKA,gBAAA,OALA,GAKU,KAAK,QAAL,CAAc;AAC5B,kBAAA,OAAO,EAAE,uBADmB;AAE5B,kBAAA,WAAW,EAAE,eAFe;AAG5B,kBAAA,IAAI,EAAE,SAHsB;AAI5B,kBAAA,QAAQ,EAAE,CAJkB;AAK5B,kBAAA,SAAS,EAAE;AALiB,iBAAd,CALV;;AAAA,oBAaD,KAAK,KAbJ;AAAA;AAAA;AAAA;;AAcE,gBAAA,GAdF,0CAcwC,OAdxC;AAAA;AAAA,uBAeE,KAAK,YAAL,CAAkB,GAAlB,EAAuB,OAAvB,CAfF;;AAAA;AAkBA,gBAAA,UAlBA,GAkBa,SAAb,UAAa,CAAC,QAAD,EAAmB,EAAnB,EAAiC;AAClD,yBAAO,YAAK;AACV,wBAAM,eAAe,GAAG,MAAI,CAAC,eAAL,CAAqB,cAAc,CAAC,OAAf,CAAuB,GAAvB,EAA4B,EAA5B,CAArB,CAAxB;;AACA,wBAAM,QAAQ,GAAG,MAAI,CAAC,WAAL,CAAkB,MAAY,CAAC,QAAD,CAA9B,EAA0C,eAA1C,EAA2D,YAA3D,CAAjB;;AAEA,wBAAI,QAAQ,GAAG,QAAQ,CAAC,cAAT,CAAwB,EAAxB,CAAf;;AACA,wBAAI,CAAC,QAAL,EAAe;AACb,sBAAA,QAAQ,GAAG,QAAQ,CAAC,aAAT,CAAuB,OAAvB,CAAX;AACA,sBAAA,QAAQ,CAAC,YAAT,CAAsB,IAAtB,EAA4B,EAA5B;AACA,sBAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,QAA1B;AACD;;AACD,oBAAA,QAAQ,CAAC,SAAT,GAAqB,QAArB;AACD,mBAXD;AAYD,iBA/BK;;AAgCA,gBAAA,YAhCA,GAgCe,UAAU,CAAC,OAAD,EAAU,aAAV,CAhCzB;AAiCN,gBAAA,YAAY;AAER,gBAAA,MAnCE,GAmCsB,GAAG,KAAH,CAAS,IAAT,CAAc,QAAQ,CAAC,gBAAT,CAA0B,OAA1B,CAAd,CAnCtB;AAoCN,gBAAA,MAAM,GAAG,MAAM,CACZ,MADM,CACC,UAAA,KAAK,EAAG;AACd,sBAAM,IAAI,GAAG,KAAK,CAAC,SAAnB;AACA,yBAAO,IAAI,MAAJ,CAAW,QAAX,EAAqB,GAArB,EAA0B,IAA1B,CAA+B,IAA/B,KAAwC,CAAC,kBAAkB,IAAlB,CAAuB,IAAvB,CAAhD;AACD,iBAJM,CAAT;AAKA,gBAAA,MAAM,CAAC,OAAP,CAAe,UAAA,KAAK,EAAG;AACrB,sBAAQ,SAAR,GAAsB,KAAtB,CAAQ,SAAR;AACA,sBAAI,OAAO,SAAP,KAAqB,QAAzB,EAAmC;AACnC,kBAAA,KAAK,CAAC,SAAN,GAAkB,MAAI,CAAC,WAAL,CAAiB,SAAjB,EAA4B,eAA5B,EAA6C,YAA7C,CAAlB;AACD,iBAJD;AAMA,qBAAK,KAAL,CAAW,QAAX,EAAqB,KAArB;AACA,gBAAA,OAAO,CAAC,KAAR;;AAhDM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAdV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,WAiEU,qBAAY,KAAZ,EAA2B,UAA3B,EAAiD,UAAjD,EAAqE;AAC3E,UAAI,QAAQ,GAAG,KAAf;AACA,MAAA,UAAU,CAAC,OAAX,CAAmB,UAAC,KAAD,EAAQ,KAAR,EAAiB;AAClC,QAAA,QAAQ,GAAG,QAAQ,CAAC,OAAT,CAAiB,IAAI,MAAJ,CAAW,KAAX,EAAkB,IAAlB,CAAjB,EAA0C,UAAU,CAAC,KAAD,CAApD,CAAX;AACD,OAFD;AAGA,aAAO,QAAP;AACD;AAvEH;AAAA;AAAA,WAyEU,sBAAa,GAAb,EAA0B,QAA1B,EAA0C;AAAA;;AAChD,aAAO,IAAI,OAAJ,CAAkB,UAAA,OAAO,EAAG;AACjC,YAAM,GAAG,GAAG,IAAI,cAAJ,EAAZ;;AACA,QAAA,GAAG,CAAC,kBAAJ,GAAyB,YAAK;AAC5B,cAAI,GAAG,CAAC,UAAJ,KAAmB,CAAnB,IAAwB,GAAG,CAAC,MAAJ,KAAe,GAA3C,EAAgD;AAC7C,YAAA,MAAY,CAAC,QAAD,CAAZ,GAAyB,GAAG,CAAC,YAAJ,CAAiB,OAAjB,CAAyB,mBAAzB,EAA8C,EAA9C,CAAzB;AACD,YAAA,OAAO;AACR;AACF,SALD;;AAMA,QAAA,GAAG,CAAC,IAAJ,CAAS,KAAT,EAAgB,GAAhB;AACA,QAAA,GAAG,CAAC,IAAJ;AACD,OAVM,CAAP;AAWD;AArFH;AAAA;AAAA,WAuFU,yBAAgB,KAAhB,EAA6B;AACnC,UAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,KAAD,EAAgB,IAAhB,EAAgC;AAChD,YAAI,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAD,EAAoB,EAApB,CAAlB;AACA,YAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAD,EAAoB,EAApB,CAApB;AACA,YAAI,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAD,EAAoB,EAApB,CAAnB;;AACA,YAAI,IAAI,KAAK,CAAb,EAAgB;AAAE;AAChB,iBAAO,CAAC,GAAD,EAAM,KAAN,EAAa,IAAb,EAAmB,IAAnB,CAAwB,GAAxB,CAAP;AACD,SAFD,MAEO;AACL,UAAA,GAAG,IAAI,IAAI,CAAC,KAAL,CAAW,IAAI,IAAI,MAAM,GAAV,CAAf,CAAP;AACA,UAAA,KAAK,IAAI,IAAI,CAAC,KAAL,CAAW,IAAI,IAAI,MAAM,KAAV,CAAf,CAAT;AACA,UAAA,IAAI,IAAI,IAAI,CAAC,KAAL,CAAW,IAAI,IAAI,MAAM,IAAV,CAAf,CAAR;AACA,4BAAW,GAAG,CAAC,QAAJ,CAAa,EAAb,CAAX,SAA8B,KAAK,CAAC,QAAN,CAAe,EAAf,CAA9B,SAAmD,IAAI,CAAC,QAAL,CAAc,EAAd,CAAnD;AACD;AACF,OAZD;;AAcA,UAAM,UAAU,GAAG,SAAb,UAAa,CAAC,KAAD,EAAgB,KAAhB,EAAiC;AAClD,YAAI,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAD,EAAoB,EAApB,CAAlB;AACA,YAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAD,EAAoB,EAApB,CAApB;AACA,YAAI,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAD,EAAoB,EAApB,CAAnB;AACA,QAAA,GAAG,GAAG,IAAI,CAAC,KAAL,CAAW,CAAC,IAAI,KAAL,IAAc,GAAzB,CAAN;AACA,QAAA,KAAK,GAAG,IAAI,CAAC,KAAL,CAAW,CAAC,IAAI,KAAL,IAAc,KAAzB,CAAR;AACA,QAAA,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,CAAC,IAAI,KAAL,IAAc,IAAzB,CAAP;AACA,0BAAW,GAAG,CAAC,QAAJ,CAAa,EAAb,CAAX,SAA8B,KAAK,CAAC,QAAN,CAAe,EAAf,CAA9B,SAAmD,IAAI,CAAC,QAAL,CAAc,EAAd,CAAnD;AACD,OARD;;AAUA,UAAM,QAAQ,GAAG,CAAC,KAAD,CAAjB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,IAAI,CAArB,EAAwB,CAAC,EAAzB,EAA6B;AAC3B,QAAA,QAAQ,CAAC,IAAT,CAAc,SAAS,CAAC,KAAD,EAAQ,MAAM,CAAC,CAAC,CAAC,GAAG,EAAL,EAAS,OAAT,CAAiB,CAAjB,CAAD,CAAd,CAAvB;AACD;;AACD,MAAA,QAAQ,CAAC,IAAT,CAAc,UAAU,CAAC,KAAD,EAAQ,GAAR,CAAxB;AACA,aAAO,QAAP;AACD;AAtHH;;AAAA;AAAA,EAA6B,GAA7B,CAAA;;AASE,UAAA,CAAA,CADC,KAAK,CAAC,cAAD,EAAiB;AAAE,EAAA,SAAS,EAAE;AAAb,CAAjB,CACN,CAAA,E,mBAAA,E,sBAAA,EAEC,IAFD,CAAA;;AAKA,UAAA,CAAA,CADC,KAAK,CAAC,OAAD,CACN,CAAA,E,mBAAA,E,eAAA,EAiDC,IAjDD,CAAA;;AAdF,SAAA,GAAA,UAAA,CAAA,CAHC,SAAS,CAAC;AACT,EAAA,IAAI,EAAE;AADG,CAAD,CAGV,CAAA,EAuHC,SAvHD,CAAA","sourcesContent":["\n\n\n\n\n\n\n\n\n\nimport { Component, Vue, Watch } from 'vue-property-decorator'\nimport { SettingsModule } from '@/store/modules/settings'\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst version = require('element-ui/package.json').version // element-ui version from node_modules\nconst ORIGINAL_THEME = '#409EFF' // default color\n\n@Component({\n  name: 'ThemePicker'\n})\nexport default class extends Vue {\n  private chalk = '' // The content of theme-chalk css\n  private theme = ''\n\n  get defaultTheme() {\n    return SettingsModule.theme\n  }\n\n  @Watch('defaultTheme', { immediate: true })\n  private onDefaultThemeChange(value: string) {\n    this.theme = value\n  }\n\n  @Watch('theme')\n  private async onThemeChange(value: string) {\n    if (!value) return\n    const oldValue = this.chalk ? this.theme : ORIGINAL_THEME\n    const themeCluster = this.getThemeCluster(value.replace('#', ''))\n    const originalCluster = this.getThemeCluster(oldValue.replace('#', ''))\n    const message = this.$message({\n      message: '  Compiling the theme',\n      customClass: 'theme-message',\n      type: 'success',\n      duration: 0,\n      iconClass: 'el-icon-loading'\n    })\n\n    if (!this.chalk) {\n      const url = `https://unpkg.com/element-ui@${version}/lib/theme-chalk/index.css`\n      await this.getCSSString(url, 'chalk')\n    }\n\n    const getHandler = (variable: string, id: string) => {\n      return () => {\n        const originalCluster = this.getThemeCluster(ORIGINAL_THEME.replace('#', ''))\n        const newStyle = this.updateStyle((this as any)[variable], originalCluster, themeCluster)\n\n        let styleTag = document.getElementById(id)\n        if (!styleTag) {\n          styleTag = document.createElement('style')\n          styleTag.setAttribute('id', id)\n          document.head.appendChild(styleTag)\n        }\n        styleTag.innerText = newStyle\n      }\n    }\n    const chalkHandler = getHandler('chalk', 'chalk-style')\n    chalkHandler()\n\n    let styles: HTMLElement[] = [].slice.call(document.querySelectorAll('style'))\n    styles = styles\n      .filter(style => {\n        const text = style.innerText\n        return new RegExp(oldValue, 'i').test(text) && !/Chalk Variables/.test(text)\n      })\n    styles.forEach(style => {\n      const { innerText } = style\n      if (typeof innerText !== 'string') return\n      style.innerText = this.updateStyle(innerText, originalCluster, themeCluster)\n    })\n\n    this.$emit('change', value)\n    message.close()\n  }\n\n  private updateStyle(style: string, oldCluster: string[], newCluster: string[]) {\n    let newStyle = style\n    oldCluster.forEach((color, index) => {\n      newStyle = newStyle.replace(new RegExp(color, 'ig'), newCluster[index])\n    })\n    return newStyle\n  }\n\n  private getCSSString(url: string, variable: string) {\n    return new Promise<void>(resolve => {\n      const xhr = new XMLHttpRequest()\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4 && xhr.status === 200) {\n          (this as any)[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, '')\n          resolve()\n        }\n      }\n      xhr.open('GET', url)\n      xhr.send()\n    })\n  }\n\n  private getThemeCluster(theme: string) {\n    const tintColor = (color: string, tint: number) => {\n      let red = parseInt(color.slice(0, 2), 16)\n      let green = parseInt(color.slice(2, 4), 16)\n      let blue = parseInt(color.slice(4, 6), 16)\n      if (tint === 0) { // when primary color is in its rgb space\n        return [red, green, blue].join(',')\n      } else {\n        red += Math.round(tint * (255 - red))\n        green += Math.round(tint * (255 - green))\n        blue += Math.round(tint * (255 - blue))\n        return `#${red.toString(16)}${green.toString(16)}${blue.toString(16)}`\n      }\n    }\n\n    const shadeColor = (color: string, shade: number) => {\n      let red = parseInt(color.slice(0, 2), 16)\n      let green = parseInt(color.slice(2, 4), 16)\n      let blue = parseInt(color.slice(4, 6), 16)\n      red = Math.round((1 - shade) * red)\n      green = Math.round((1 - shade) * green)\n      blue = Math.round((1 - shade) * blue)\n      return `#${red.toString(16)}${green.toString(16)}${blue.toString(16)}`\n    }\n\n    const clusters = [theme]\n    for (let i = 0; i <= 9; i++) {\n      clusters.push(tintColor(theme, Number((i / 10).toFixed(2))))\n    }\n    clusters.push(shadeColor(theme, 0.1))\n    return clusters\n  }\n}\n"],"sourceRoot":""}]}